//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ETOS.WebUI.RequestPriceCalculator {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RequestPriceCalculator.IRequestPriceCalculatingService")]
    public interface IRequestPriceCalculatingService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRequestPriceCalculatingService/CalculateRequestPrice", ReplyAction="http://tempuri.org/IRequestPriceCalculatingService/CalculateRequestPriceResponse")]
        decimal CalculateRequestPrice(float distance, decimal tariff);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRequestPriceCalculatingService/CalculateRequestPrice", ReplyAction="http://tempuri.org/IRequestPriceCalculatingService/CalculateRequestPriceResponse")]
        System.Threading.Tasks.Task<decimal> CalculateRequestPriceAsync(float distance, decimal tariff);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRequestPriceCalculatingServiceChannel : ETOS.WebUI.RequestPriceCalculator.IRequestPriceCalculatingService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RequestPriceCalculatingServiceClient : System.ServiceModel.ClientBase<ETOS.WebUI.RequestPriceCalculator.IRequestPriceCalculatingService>, ETOS.WebUI.RequestPriceCalculator.IRequestPriceCalculatingService {
        
        public RequestPriceCalculatingServiceClient() {
        }
        
        public RequestPriceCalculatingServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RequestPriceCalculatingServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RequestPriceCalculatingServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RequestPriceCalculatingServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public decimal CalculateRequestPrice(float distance, decimal tariff) {
            return base.Channel.CalculateRequestPrice(distance, tariff);
        }
        
        public System.Threading.Tasks.Task<decimal> CalculateRequestPriceAsync(float distance, decimal tariff) {
            return base.Channel.CalculateRequestPriceAsync(distance, tariff);
        }
    }
}
